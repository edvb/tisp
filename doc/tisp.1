.TH TISP 1 "June 2025" "tisp 0.1"
.PP
.SH NAME
tisp \- tiny lisp
.PP
.SH SYNOPSIS
tisp [-rhv] [-e EXPRESSION] [FILE ...] [-]
.PP
.SH DESCRIPTION
.PP
Tisp programming language default interpreter.  Read and evaluate all files in order given, if file name is '-' read from 'stdin'. If no files are supplied launch the read-evaluate-print-loop (REPL) for interactive running of commands.
.PP
.SH OPTIONS
.TP
\fB-e EXPRESSION\fP
Read \fIEXPRESSION\fP as a line of Tisp code, evaluate, and print result
.PP
.TP
\fB-r\fP
Launch the REPL prompt. Default if no arguments are given. Useful for loading files and then running REPL after. Equivalent to -e '(repl)'
.PP
.TP
\fB-h\fP
Print help and exit
.PP
.TP
\fB-v\fP
Print version info and exit
.PP
.SH USAGE
.PP
Run the program from the command line to type a single command and press enter to see the result.
.PP
.RS 4
.EX

$ tisp
> (cons 1 2)
'(1 . 2)
> (list 1 (+ 1 1) 3 (* 2 2))
'(1 2 4)

.EE
.RE
.PP
Alternatively you can pass a file name which will be opened and run, outputting the result before exiting.
.PP
.RS 4
.EX

$ echo '((Func (x) (+ x 1)) 10)' > inc.tsp
$ tisp inc.tsp
11

.EE
.RE
.PP
Commands can also be piped directing into Tisp through the command line.
.PP
.RS 4
.EX

$ echo '(= "foo" "foo")' | tisp
True

.EE
.RE
.PP
Or given directly to Tisp as an argument:
.PP
.RS 4
.EX

$ tisp -e "(reverse '(1/2 1/4 1/8 1/16))"
(1/16 1/8 1/4 1/2)

.EE
.RE
.SH SEE ALSO
.PP
tisp(7)
.PP
.PP
See project at <https://edryd.org/projects/tisp>
.PP
.PP
View source code at <https://git.edryd.org/tisp>
.PP
.SH AUTHOR
.PP
Edryd van Bruggen <ed@edryd.org>
.PP
.SH LICENSE
.PP
zlib License
.PP

